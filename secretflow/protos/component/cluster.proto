// Copyright 2023 Ant Group Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package secretflow.component;

message SFClusterDesc {
  string sf_version = 1;

  string py_version = 2;

  // Joined entities.
  repeated string parties = 3;

  // Description for an SPU device.
  message DeviceDesc {
    // Name of spu.
    string name = 1;

    string type = 2;

    // Parties of spu.
    repeated string parties = 3;

    // https://www.secretflow.org.cn/docs/spu/en/reference/runtime_config.html
    // Please provide a json.
    string config = 4;
  }

  repeated DeviceDesc devices = 4;
}

// Addesses for a spu.
message SPUAddressConfig {
  string spu_id = 1;

  repeated string parties = 2;

  repeated string addresses = 3;

  repeated string listen_addresses = 4;
}

// Addesses for SecretFlow cluster.
message SFAddressConfig {
  repeated string addresses = 3;

  repeated string listen_addresses = 4;
}

message LocalFsConfig {
  // working directory
  string wd = 1;
}

message StorageConfig {
  // supported: local_fs
  string type = 1;

  LocalFsConfig local_fs = 2;
}

message SFClusterConfig {
  SFClusterDesc desc = 1;

  // Allocated dynamically beyond this point.
  // For production only.
  string self_party = 2;

  StorageConfig storage = 3;

  string ray_head_addr = 4;

  SFAddressConfig sf_addresses = 5;

  repeated SPUAddressConfig spu_addresses = 6;
}
