# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022 Ant Group Co., Ltd.
# This file is distributed under the same license as the SecretFlow package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
msgid ""
msgstr ""
"Project-Id-Version: SecretFlow \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-06 14:06+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../getting_started/DEPLOYMENT.md:1
msgid "Deployment"
msgstr "部署"

#: ../../getting_started/DEPLOYMENT.md:4
msgid "Pre-knowledge: about Ray"
msgstr "前置知识：关于Ray"

#: ../../getting_started/DEPLOYMENT.md:5
msgid ""
"SecretFlow uses Ray as its distributed framework. A Ray cluster consists "
"of a head node and zero or several slave nodes, for more information "
"about Ray, please visit [Ray official website](https://docs.ray.io/)."
msgstr "隐语使用Ray作为分布式计算调度框架。Ray集群由一个主节点和零或若干个从节点组成，更多Ray的知识可以访问[Ray官网](https://docs.ray.io/)。"

#: ../../getting_started/DEPLOYMENT.md:7
msgid "Simulation"
msgstr "仿真"

#: ../../getting_started/DEPLOYMENT.md:8
msgid ""
"SecretFlow is designed for fast simulation on a single host or on "
"multiple nodes with single ray cluster."
msgstr "SecretFlow被设计为可以快速仿真，既可以单机运行，也可以在多个节点上运行。"

#: ../../getting_started/DEPLOYMENT.md:10
#: ../../getting_started/DEPLOYMENT.md:53
#: ../../getting_started/DEPLOYMENT.md:158
#: ../../getting_started/DEPLOYMENT.md:288
msgid "**Note**"
msgstr "**注意**"

#: ../../getting_started/DEPLOYMENT.md:12
msgid ""
"SecretFlow with single ray cluster is for simulation only. Please refer "
"to `production` section below for production."
msgstr "基于单个ray集群的SecretFlow只适用于仿真。 生产环境建议阅读后面的生产相关章节。"

#: ../../getting_started/DEPLOYMENT.md:15
msgid "Standalone mode for simulation"
msgstr "单机仿真"

#: ../../getting_started/DEPLOYMENT.md:16
msgid ""
"Use `secretflow.init` directly to run secretflow in standalone mode. A "
"ray cluster with only one node will be started, and it will automatically"
" shut down when the program exits."
msgstr ""
"使用 `secretflow.init` "
"在单机模式下运行SecretFlow。该模式会直接启动只有一个节点的ray集群，并且当程序退出时会自动关闭。"

#: ../../getting_started/DEPLOYMENT.md:22
msgid "Cluster mode for simulation"
msgstr "集群模式仿真"

#: ../../getting_started/DEPLOYMENT.md:23
msgid ""
"In the cluster simulation mode, each Ray node simulates an participant. "
"This is done by adding the participant name as resource tag on each Ray "
"node, and then the calculation task of each participant is dispatched to "
"the corresponding Ray node. The overall communication network is as "
"follows."
msgstr ""
"在隐语的集群仿真模式下，每个Ray节点模拟一个机构，具体做法是通过给每个Ray节点添加机构名称标记，从而保证机构的计算被调度到相应的Ray节点上。"
" 整体通信网络如下。"

#: ../../getting_started/DEPLOYMENT.md:26
msgid "![simulation_comm](resources/simulation_comm_en.png)"
msgstr "![simulation_comm](resources/simulation_comm_ch.png)"

#: ../../getting_started/DEPLOYMENT.md:26
#: ../../getting_started/DEPLOYMENT.md:278
msgid "simulation_comm"
msgstr "仿真"

#: ../../getting_started/DEPLOYMENT.md:28
msgid ""
"The following is an example showing how to build a cluster consisting of "
"alice and bob on multiple nodes."
msgstr "下面的例子展示了如何在多个节点上部署一个包含alice和bob的集群。"

#: ../../getting_started/DEPLOYMENT.md:30
msgid "Start head node"
msgstr "启动主节点"

#: ../../getting_started/DEPLOYMENT.md:31
msgid "Start a head node on your first machine with the tag \"alice\"."
msgstr "在第一台机器上启动带有 \"alice\" 标识的主节点。"

#: ../../getting_started/DEPLOYMENT.md:34
msgid "**NOTE**"
msgstr "**注意**"

#: ../../getting_started/DEPLOYMENT.md:36
msgid "Remember to use the real ip and port instead."
msgstr "请使用真实的ip地址和端口。"

#: ../../getting_started/DEPLOYMENT.md:38
msgid ""
"`{\"alice\": 16}` means that alice can run up to 16 workers at the same "
"time. Just feel free to change it if you like."
msgstr "`{\"alice\": 16}` 意味着alice最多可以同时运行16个worker。 您可以按需要自行调整。"

#: ../../getting_started/DEPLOYMENT.md:45
msgid ""
"Head node starts successfully if you see \"Ray runtime started.\" in the "
"screen output."
msgstr "当屏幕中输出 \"Ray runtime started.\" 意味着主节点成功启动。"

#: ../../getting_started/DEPLOYMENT.md:47
msgid "Now we have a cluster with a head node only, let us start more nodes."
msgstr "现在我们的集群只有一个主节点，接下来我们启动更多节点。"

#: ../../getting_started/DEPLOYMENT.md:49
msgid "Start other nodes"
msgstr "启动其他节点"

#: ../../getting_started/DEPLOYMENT.md:50
msgid ""
"Start a node with the tag \"bob\" on another machine. The node will "
"connect to the head node and join the cluster."
msgstr "在另一台机器上启动带有 \"bob\" 标志的节点。 这个节点将会连接主节点并加入集群。"

#: ../../getting_started/DEPLOYMENT.md:55
msgid ""
"Replace `ip:port` with the `node-ip-address` and `port` of head node "
"please."
msgstr "请将 `ip:port` 更换为主节点的 `node-ip-address` 和 `port`。"

#: ../../getting_started/DEPLOYMENT.md:63
msgid ""
"The node starts successfully if you see \"Ray runtime started.\" in the "
"screen output.  A Ray cluster consisting of two Ray nodes has been built "
"by now, while the head node simulates `alice` and the slave node "
"simulates `bob`."
msgstr ""
"当屏幕输出中出现 \"Ray runtime started.\" "
"意味着节点启动成功。现在由两个Ray节点构成的Ray集群已经搭建完毕。其中，头节点模拟机构alice，从节点模拟机构bob。"

#: ../../getting_started/DEPLOYMENT.md:66
msgid ""
"You can repeat the step above to start more nodes with using other "
"parties as resources tag as you like."
msgstr "你也可以继续重复上述步骤以启动带有其他参与方标识的节点。"

#: ../../getting_started/DEPLOYMENT.md:68
#: ../../getting_started/DEPLOYMENT.md:220
msgid "Start SecretFlow"
msgstr "启动SecretFlow"

#: ../../getting_started/DEPLOYMENT.md:69
msgid ""
"Now you can start SecretFlow and run your code.  The following code shows"
" that alice and bob each execute a function that returns the input value."
msgstr "现在你可以启动SecretFlow。下面这段代码表示alice和bob分别执行了一个返回输入值的函数。"

#: ../../getting_started/DEPLOYMENT.md:73
#: ../../getting_started/DEPLOYMENT.md:114
#: ../../getting_started/DEPLOYMENT.md:306
#: ../../getting_started/DEPLOYMENT.md:348
msgid "**Tips**"
msgstr "**提示**"

#: ../../getting_started/DEPLOYMENT.md:75
#: ../../getting_started/DEPLOYMENT.md:307
msgid ""
"Replace `ip:port` in `sf.init` with the `node-ip-address` and `port` of "
"head node please."
msgstr "请使用主节点的 `node-ip-address` 和 `port` 填充 `sf.init` 的 `address` 参数。"

#: ../../getting_started/DEPLOYMENT.md:76
msgid ""
"If you start more nodes (such as carol, davy, etc.), remember to add the "
"new party name in the `parties=['alice', 'bob']` parameter."
msgstr "如果你启动了更多的节点（比如carol、davy等），记得在`parties=['alice', 'bob']`参数中添加新的参与方名称。"

#: ../../getting_started/DEPLOYMENT.md:92
msgid "(optional) How to shut down the cluster"
msgstr "（可选）如何关闭集群"

#: ../../getting_started/DEPLOYMENT.md:93
msgid ""
"In some cases you would like to shut down the cluster, the following "
"command will help you. Remember to run the command on all machines."
msgstr "当你需要关闭集群时，请使用以下命令。请在所有机器上执行命令。"

#: ../../getting_started/DEPLOYMENT.md:96
msgid ""
"Note that all ray processors on the machine will be stopped, which means "
"all ray clusters will be stopped."
msgstr "请注意在机器上的所有ray进程都会被停止，这意味着所有ray集群将会停止。"

#: ../../getting_started/DEPLOYMENT.md:103
msgid "(optional) How to setup an SPU in cluster mode"
msgstr "（可选）如何在集群模式下启动SPU"

#: ../../getting_started/DEPLOYMENT.md:105
msgid ""
"`SPU` consists of multi workers on different nodes. For performance "
"reasons, the major part of SPU is written in C++. SPU is based on Brpc, "
"which indicates it has a separated service mesh independent of Ray's "
"networking. In a word, you need to assign different ports for the SPU for"
" now. We are working on merging them."
msgstr ""
"`SPU` "
"在不同节点上包含了多个工作进程。大部分SPU的代码由C++编写以确保性能。SPU基于Brpc，这意味着SPU拥有一个独立于Ray网络之外的服务网格。换言之，你必须单独处理SPU的端口。目前，我们正在尝试合并两者。"

#: ../../getting_started/DEPLOYMENT.md:111
msgid "A typical SPU config is as follows."
msgstr "SPU的配置可以参考。"

#: ../../getting_started/DEPLOYMENT.md:116
msgid ""
"Replace `address` in `sf.init` with the `node-ip-address` and `port` of "
"head node please."
msgstr "请使用主节点的 `node-ip-address` 和 `port` 填充 `sf.init` 的 `address` 参数。"

#: ../../getting_started/DEPLOYMENT.md:117
msgid ""
"Fill `address` of `alice` with the address which can be accessed by `bob`"
" and choose **an unused port** different with Ray."
msgstr "`alice` 的 `address` 请填写可以被bob访通的地址，并且选择一个 **未被占用的端口** ，注意不要和Ray端口冲突。"

#: ../../getting_started/DEPLOYMENT.md:118
msgid "`listen_addr` of `alice` can use the same port of alice `address`."
msgstr "`alice` 的 `listen_addr` 可以和alice `address`里的端口一样。"

#: ../../getting_started/DEPLOYMENT.md:119
msgid ""
"Fill `address` of `bob` with the ip which can be accessed by `alice` and "
"choose **an unused port** different with Ray."
msgstr "`bob` 的 `address` 请填写可以被alice访通的地址，并且选择一个 **未被占用的端口** ，注意不要和Ray端口冲突。"

#: ../../getting_started/DEPLOYMENT.md:120
msgid "`listen_addr` of `bob` can use the same port of bob `address`."
msgstr "`bob` 的 `listen_addr` 可以和bob `address`里的端口一样。"

#: ../../getting_started/DEPLOYMENT.md:155
msgid ""
"For more configurations of SPU, please refer to [SPU "
"config](https://www.secretflow.org.cn/docs/spu/en/reference/runtime_config.html)"
msgstr ""
"详细的SPU配置可以参考 [SPU "
"config](https://www.secretflow.org.cn/docs/spu/en/reference/runtime_config.html)。"

#: ../../getting_started/DEPLOYMENT.md:160
msgid ""
"You will see the usage of setup an spu in many tutorials. But be careful "
"that it works only in standalone mode because "
"`sf.utils.testing.cluster_def` use `127.0.0.1` as the default ip."
msgstr ""
"你可以看到在很多教程中使用 `sf.utils.testing.cluster_def` 建立SPU。请注意它只能在单机模式下使用，因为它使用了 "
"`127.0.0.1` 作为默认ip。"

#: ../../getting_started/DEPLOYMENT.md:168
msgid "Deploy SecretFlow in a docker container with simulation mode"
msgstr "使用docker部署仿真SecretFlow"

#: ../../getting_started/DEPLOYMENT.md:170
msgid ""
"You may need to understand the concept of [docker "
"network](https://docs.docker.com/network/) firstly. The two main docker "
"networks are [host network](https://docs.docker.com/network/host/) and "
"[bridge network](https://docs.docker.com/network/bridge/), you can click "
"the link to read the official documentation to learn more.\""
msgstr "在此之前，您可能需要先了解[docker网络](https://docs.docker.com/network/)的概念。Docker网络目前比较主流的两种网络是[host网络](https://docs.docker.com/network/host/)和[bridge网络](https://docs.docker.com/network/bridge/)，您可以点击链接阅读官方文档了解更多。"

#: ../../getting_started/DEPLOYMENT.md:172
msgid ""
"SecretFlow recommends to start the container using the host network mode,"
" and the following will explain the reasons to you."
msgstr "隐语推荐使用host网络模式启动容器，下面会向您解释原因。"

#: ../../getting_started/DEPLOYMENT.md:174
msgid "(Recommended) Host network"
msgstr "（推荐）host网络"

#: ../../getting_started/DEPLOYMENT.md:175
msgid ""
"When you start the docker container using host network (e.g. run "
"container with `--network host`), the container will share the network of"
" the host machine. Therefore, no special configuration is required to "
"build a SecretFlow cluster in this case, and you can directly use the "
"address of the host as the communication address between nodes. Refer to "
"the preceding steps for deployment.."
msgstr ""
"如果您使用host方式启动docker容器（比如在启动时添加参数`--network "
"host`），则容器会直接共享宿主机的网络。因此这种情况下搭建SecretFlow集群无需特别的配置，您可以直接使用宿主机的地址作为节点间通信的地址。部署步骤可以参考前文。"

#: ../../getting_started/DEPLOYMENT.md:177
msgid "(Not recommended) Bridge network"
msgstr "（不推荐）bridge网络"

#: ../../getting_started/DEPLOYMENT.md:178
msgid ""
"If you start the Docker container with a bridge network, it means that "
"the container will have an isolated network with a different IP address "
"from the host, and containers on different bridge networks are not "
"connected by default. Although you can map ports to the host through port"
" mapping, since the communication between Ray's multiple nodes is "
"complex, involving many ports, it is easy to make mistakes and difficult "
"to configure correctly, so we do not recommend using the bridge mode to "
"build the simulation cluster."
msgstr "如果您使用bridge网络启动docker容器，则意味着容器会拥有独立的隔离网络，ip地址与宿主机不同，并且不在同一个bridge网络上的容器默认是不通的。虽然您可以通过[端口映射](https://docs.docker.com/engine/reference/commandline/run/#publish)的方式把端口映射到宿主机上，但是由于ray多个节点之间的通信比较复杂，其中涉及到很多端口，比较容易出错不易配置正确，所以我们并不建议使用bridge模式搭建仿真集群。"

#: ../../getting_started/DEPLOYMENT.md:181
msgid ""
"If you cannot use the host network for some unavoidable reasons, we hope "
"the following instructions will be helpful for you to deploy SecretFlow "
"using the bridge network."
msgstr "如果因为某些原因您确实无法使用host网络，希望下面的说明对您使用bridge网络部署SecretFlow有帮助。"

#: ../../getting_started/DEPLOYMENT.md:183
msgid ""
"Scenario 1: Deploying a simulation cluster using multiple Docker "
"containers on a single machine."
msgstr "情形一： 在一台机器上使用多个docker容器模部署仿真集群"

#: ../../getting_started/DEPLOYMENT.md:185
msgid ""
"The following steps show how to start multiple containers on one machine."
" Since it is on the same machine, multiple containers can use the same "
"bridge network for communication."
msgstr "下列步骤展示了如何在一台机器上启动多个容器。由于在同一台机器上，因此多个容器可以使用同一个bridge网络通信。"

#: ../../getting_started/DEPLOYMENT.md:187
msgid "Create a bridege network"
msgstr "创建一个bridge网络"

#: ../../getting_started/DEPLOYMENT.md:189
msgid ""
"The following command creates a bridge network with network segment "
"192.168.0.1/24 named `sfnet`. Note that this network segment is only an "
"example, and you can modify the network segment address according to your"
" own needs."
msgstr ""
"下列命令创建了一个网段为192.168.0.1/24的bridge网络，名称叫做sfnet。 "
"注意该网段仅为示例，您可以根据自己的需求自行修改网段地址。"

#: ../../getting_started/DEPLOYMENT.md:196
msgid "Start the first container to simulate party `alice`"
msgstr "启动第一个容器模拟机构alice"

#: ../../getting_started/DEPLOYMENT.md:198
msgid ""
"The following command starts the container named `secretflow0`, uses the "
"bridege network created in the first step, and specifies the ip as "
"192.168.0.10."
msgstr "下列命令启动了名为`secretflow0`的容器，使用第一步创建的bridege网络，并且指定了ip为192.168.0.10。"

#: ../../getting_started/DEPLOYMENT.md:202
msgid ""
"After the container is started successfully, then we start the head node "
"of ray. The following command starts Ray's head node listening on port "
"9001 (you are free to choose an unused port)."
msgstr "容器启动成功后，接着我们启动ray的主节点。下列命令启动了Ray的主节点，监听端口为9001（您可以自由选择一个未使用的端口）。"

#: ../../getting_started/DEPLOYMENT.md:207
msgid "Start the second container to simulate party `bob`"
msgstr "启动第二个容器模拟机构bob"

#: ../../getting_started/DEPLOYMENT.md:209
msgid ""
"The following command starts the container named `secretflow1`, uses the "
"bridege network created in the first step, and specifies the ip as "
"192.168.0.20."
msgstr "下列命令启动了名为`secretflow1`的容器，使用第一步创建的bridege网络，并且指定了ip为192.168.0.20。"

#: ../../getting_started/DEPLOYMENT.md:213
msgid ""
"After starting the container, we start Ray's slave node. The following "
"command starts a slave node and connects to the head node started in the "
"previous step."
msgstr "启动容器后，我们启动Ray的从节点。下面命令启动了Ray的从节点，连接上一步启动的主节点。"

#: ../../getting_started/DEPLOYMENT.md:218
msgid ""
"So far we have built two Ray nodes, representing party alice and bob "
"respectively."
msgstr "至此我们已经搭建了两个Ray节点，分别代表机构alice和bob。"

#: ../../getting_started/DEPLOYMENT.md:222
msgid ""
"We start SecretFlow in the first container, the following Python code "
"shows that SecretFlow has successfully connected to the Ray cluster."
msgstr "启动SecretFlow 我们在第一个容器内启动SecretFlow，下列Python代码说明SecretFlow成功连接到了Ray集群"

#: ../../getting_started/DEPLOYMENT.md:231
msgid "(Optional) Start the SPU device"
msgstr "（可选）启动SPU设备"

#: ../../getting_started/DEPLOYMENT.md:233
msgid ""
"This step describes how to start the SPU device. Suppose the SPU uses "
"port 9100 on alice and port 9200 on bob. (port numbers are examples only,"
" you can choose any free port)"
msgstr "这一步描述了如何启动SPU设备。假设SPU在alice上使用端口9100，在bob上使用端口9200。（端口号仅为示例，您可以任意选择未被占用的端口）"

#: ../../getting_started/DEPLOYMENT.md:266
msgid ""
"(Not recommended strongly) Scenario 2: Deploy a simulation cluster using "
"multiple docker containers on multiple machines"
msgstr "（强烈不推荐）情形二：在多台机器上使用多个docker容器部署仿真集群"

#: ../../getting_started/DEPLOYMENT.md:268
msgid ""
"Due to the complexity of the Ray communication protocol, including cross-"
"node mutual access and using many ports, it's really complex and error-"
"prone to deploy multiple containers on multiple machines using the bridge"
" network to build a Ray cluster for simulation. Ray's official support "
"for this is not good, so we do not recommend this deployment mode."
msgstr "如果您需要在多台机器上使用bridge网络部署多个容器来搭建Ray集群，由于Ray的通信协议复杂(使用到很多端口且会发生跨节点互相访问），导致需要每台机器上都要透出很多端口，操作很复杂且很容易出错。Ray官方对此的支持也并不好，所以我们非常不推荐这种部署模式。"

#: ../../getting_started/DEPLOYMENT.md:270
msgid "Production"
msgstr "生产模式"

#: ../../getting_started/DEPLOYMENT.md:272
msgid ""
"SecretFlow provides multi controller mode for production with enhanced "
"security. (If you want to know more, welcome to read [Programming in "
"SecretFlow](../developer/design/programming_in_secretflow.md))"
msgstr "SecretFlow提供了多控制器模式用于生产以提升安全性。（如果您想了解更多，欢迎阅读[隐语编程思想](../developer/design/programming_in_secretflow.md)）"

#: ../../getting_started/DEPLOYMENT.md:274
msgid ""
"A SecretFlow cluster for production consists of several ray clusters, and"
" every party has its own ray cluster. **Each participant must execute the"
" code at the same time to complete the task of collaboration.** The "
"architecture of the production mode is shown in the figure below."
msgstr ""
"用于生产的SecretFlow由多个ray集群组成，每个参与方拥有各自的ray集群。 "
"**与此同时，每一个参与方都要同时执行代码，才能完成任务的协作** 。生产模式的架构如下图所示。"

#: ../../getting_started/DEPLOYMENT.md:278
msgid "![simulation_comm](resources/rayfed_comm_en.png)"
msgstr "![simulation_comm](resources/rayfed_comm_ch.png)"

#: ../../getting_started/DEPLOYMENT.md:280
msgid "The following will guide you to deploy SecretFlow for production."
msgstr "下列步骤将演示如何部署生产模式的SecretFlow。"

#: ../../getting_started/DEPLOYMENT.md:282
msgid "Setup a SecretFlow cluster crossing silo"
msgstr "创建跨机构的SecretFlow集群。"

#: ../../getting_started/DEPLOYMENT.md:285
msgid ""
"The following is an example showing how to build a cluster consisting of "
"alice and bob for production."
msgstr "下面的例子展示了如何构建一个由alice和bob组成的生产集群。"

#: ../../getting_started/DEPLOYMENT.md:290
msgid "Please keep in mind that alice and bob should run the code simultaneously."
msgstr "请牢记alice和bob需要同时运行代码。"

#: ../../getting_started/DEPLOYMENT.md:294
msgid "Start SecretFlow on the node of `alice`"
msgstr "在alice节点上启动SecretFlow"

#: ../../getting_started/DEPLOYMENT.md:296
msgid ""
"`alice` starts its ray cluster firstly. Note that the command here is to "
"start Ray's head node."
msgstr "alice首先启动ray集群。注意这里的命令是启动Ray的主节点。"

#: ../../getting_started/DEPLOYMENT.md:300
#: ../../getting_started/DEPLOYMENT.md:341
msgid ""
"Head node starts successfully if you see \"Ray runtime started.\" in the "
"screen output.  So far, Alice's Ray cluster has been successfully built."
msgstr "屏幕输出中显示\"Ray runtime started.\"，则说明Ray的主节点启动成功。至此alice的Ray集群已经创建完成。"

#: ../../getting_started/DEPLOYMENT.md:303
msgid ""
"Then `alice` initializes SecretFlow with a cluster config and runs the "
"code."
msgstr "`alice`使用集群配置初始化SecretFlow，并且运行代码。"

#: ../../getting_started/DEPLOYMENT.md:308
#: ../../getting_started/DEPLOYMENT.md:350
msgid ""
"Fill `address` of `alice` with the address which can be accessed by "
"`bob`. Remember to choose an unused port different with port of Ray and "
"SPU."
msgstr "`alice` 的 `address` 请填写可以被bob访通的地址，并且选择一个 **未被占用的端口** ，注意不要和Ray和SPU的端口冲突。"

#: ../../getting_started/DEPLOYMENT.md:309
#: ../../getting_started/DEPLOYMENT.md:351
msgid ""
"Fill `address` of `bob` with the address which can be accessed by "
"`alice`. Remember to choose an unused port different with port of Ray and"
" SPU."
msgstr "`bob` 的 `address` 请填写可以被alice访通的地址，并且选择一个 **未被占用的端口** ，注意不要和Ray和SPU的端口冲突。"

#: ../../getting_started/DEPLOYMENT.md:310
msgid "Note that `self_party` is `alice`."
msgstr "注意 `self_party` 为 `alice` 。"

#: ../../getting_started/DEPLOYMENT.md:311
#: ../../getting_started/DEPLOYMENT.md:353
msgid ""
"Please note that `sf.init` does not need to provide the `parties` "
"parameter, but needs to provide a `cluster_config` to describe the "
"communication address and port between the two organizations."
msgstr "请注意sf.init不需要提供 `parties` 参数，而是需要提供 `cluster_config` 来描述两个机构之间的通信地址和端口。"

#: ../../getting_started/DEPLOYMENT.md:335
msgid "Start SecretFlow on the node of `bob`"
msgstr "在bob节点上启动SecretFlow。"

#: ../../getting_started/DEPLOYMENT.md:337
msgid ""
"`bob` starts its ray cluster firstly. Note that the command here is to "
"start the head node of Ray, because bob needs to build a separate Ray "
"cluster."
msgstr "bob首先启动ray集群"

#: ../../getting_started/DEPLOYMENT.md:345
msgid ""
"Then `bob` initializes SecretFlow with a cluster config almost same as "
"`alice` except for `self_party` and ray address and runs the code."
msgstr "bob使用和alice类似的集群配置初始化SecretFlow，除了 `self_party` 字段稍有不同。然后运行代码。"

#: ../../getting_started/DEPLOYMENT.md:349
msgid ""
"Replace `address` in `sf.init` with the `node-ip-address` and `port` of "
"head node please. Note, here is bob’s head node address, please don’t "
"fill in alice’s."
msgstr ""
"使用主节点的 `node-ip-address` 和 `port`来填充 `sf.init` 的 `address` "
"参数。注意，这里填写的是bob的头节点地址，请不要填写成alice的。"

#: ../../getting_started/DEPLOYMENT.md:352
msgid "Note that `self_party` is `bob`."
msgstr "注意`self_party` 为 `bob`。"

#: ../../getting_started/DEPLOYMENT.md:379
msgid "How to setup SPU for production"
msgstr "如何构建SPU"

#: ../../getting_started/DEPLOYMENT.md:381
msgid ""
"The way to build the SPU is the same as the simulation mode, the only "
"difference is that building the SPU also needs to be executed by multiple"
" parties at the same time, please read the previous article for more "
"details."
msgstr "除了SPU的创建需要多个参会方同时执行外，创建SPU的方式与模拟模式一样，请阅读前文了解更多细节。"

#: ../../getting_started/DEPLOYMENT.md:383
msgid ""
"In order to avoid problems such as connection timeout caused by the "
"startup time difference, you may need to set the `link_desc` parameter "
"when initialize the SPU to adjust the connection-related parameters. For "
"details, see "
"[SPU](../source/secretflow.device.device.rst#secretflow.device.device.spu.SPU.__init__)"
" ."
msgstr ""
"为了避免启动时差带来的比如连接超时等问题，您可能需要设置SPU的`link_desc`参数来调整连接相关参数，具体参见 "
"[SPU](../source/secretflow.device.device.rst#secretflow.device.device.spu.SPU.__init__)"
" "

#: ../../getting_started/DEPLOYMENT.md:386
msgid "Suggestions for production"
msgstr "生产环境建议"

#: ../../getting_started/DEPLOYMENT.md:388
msgid "Enable tls Authentication."
msgstr "启动tls验证。"

#: ../../getting_started/DEPLOYMENT.md:390
msgid "SecretFlow can be configured to use TLS on cross-silo gRPC channels."
msgstr "SecretFlow的跨机构grpc通信可以配置TLS以提升安全性。"

#: ../../getting_started/DEPLOYMENT.md:392
msgid "An example for alice."
msgstr "alice的配置示例。"

#: ../../getting_started/DEPLOYMENT.md:406
msgid "An example for bob."
msgstr "bob的配置示例。"

#: ../../getting_started/DEPLOYMENT.md:420
msgid "Enhanced serialization/deserialization."
msgstr "序列化/反序列化增强。"

#: ../../getting_started/DEPLOYMENT.md:422
msgid ""
"SecretFlow uses `pickle` in serialization/deserialization which is "
"vulnerable. You can set `cross_silo_serializing_allowed_list` when init  "
"SecretFlow to specify an allowlist to restrict serializable objects.  An "
"example could be （**You should not use this demo directly. Configure it "
"to your actual needs.**）"
msgstr ""
"SecretFlow使用 `pickle` 进行序列化/反序列化，可能存在被攻击的风险。你可以在初始化SecretFlow时通过 "
"`cross_silo_serializing_allowed_list` "
"参数设置允许序列化的对象。示例如下（请不要直接使用该示例，请根据实际需要自行修改）。 "

