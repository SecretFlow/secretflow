# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
parameters:
  base:
    type: boolean
    default: false
  sf_data:
    type: boolean
    default: false
  sf_device:
    type: boolean
    default: false
  sf_distributed:
    type: boolean
    default: false
  sf_kuscia:
    type: boolean
    default: false
  sf_maths:
    type: boolean
    default: false
  sf_security:
    type: boolean
    default: false
  sf_ml_boost:
    type: boolean
    default: false
  sf_utils:
    type: boolean
    default: false
  test_boost:
    type: boolean
    default: false

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  linux_build:
    docker:
      - image: secretflow/ubuntu-base-ci:latest
    parameters:
      resource_class:
        type: string
    resource_class: << parameters.resource_class >>
    shell: /bin/bash --login -eo pipefail
    steps:
      - checkout
      - when:
          condition:
              << pipeline.parameters.base >>
          steps:
            - run:
                name: "build shared library"
                command: |
                  conda init
                  arch=$(uname -i)
                  mkdir -p artifacts
                  bazel build //secretflow_lib/binding/... -c opt
                  mv bazel-bin/secretflow_lib/binding/_lib.so artifacts/_lib_$arch.so
                  # pip install -r requirements.txt
                  pip install -r dev-requirements.txt
            - persist_to_workspace:
                root: .
                paths: artifacts
            - persist_to_workspace:
                root: /root
                path: miniconda3/lib/python3.10/site-packages
  macos_build:
    macos:
      xcode: 15.1
    resource_class: macos.m1.medium.gen1
    steps:
      - checkout
      - when:
          condition: 
              << pipeline.parameters.base >>
          steps:
            - run:
                name: "Install homebrew dependencies"
                command: |
                  brew install bazelisk cmake ninja libomp wget
            - run:
                name: "Install Miniconda"
                command: |
                  wget https://repo.anaconda.com/miniconda/Miniconda3-py310_24.1.2-0-MacOSX-arm64.sh -O ~/miniconda.sh
                  bash ~/miniconda.sh -b -p $HOME/miniconda
                  source $HOME/miniconda/bin/activate
                  conda init zsh
                  pip install -r requirements.txt
                  pip install -r dev-requirements.txt
            - run:
                name: "build shared library"
                command: |
                  mkdir -p artifacts
                  bazel build //secretflow_lib/binding/... -c opt
                  mv bazel-bin/secretflow_lib/binding/_lib.so artifacts/_lib_mac.so
                  pip install -r requirements.txt
                  pip install -r dev-requirements.txt
            - persist_to_workspace:
                root: .
                paths:
                  - artifacts
            - persist_to_workspace:
                root: $HOME/miniconda/lib/python3.10/
                paths: site-packages
  linux_ml_boost_test:
    docker:
      - image: secretflow/ubuntu-base-ci:latest
    parameters:
      resource_class:
        type: string
    resource_class: << parameters.resource_class >>
    shell: /bin/bash --login -eo pipefail
    steps:
      - checkout
      - when:
          condition:
            or:
                - << pipeline.parameters.base >>
                - << pipeline.parameters.sf_data >>
                - << pipeline.parameters.sf_device >>
                - << pipeline.parameters.sf_distributed >>
                - << pipeline.parameters.sf_kuscia >>
                - << pipeline.parameters.sf_maths >>
                - << pipeline.parameters.sf_security >>
                - << pipeline.parameters.sf_ml_boost >>
                - << pipeline.parameters.sf_utils >>
                - << pipeline.parameters.test_boost >>
          steps:
            - restore_cache:
                name: Restore pytest testmondata
                key: testmondata-ml_boost_{{ arch }}-{{ .Branch }}-
            - attach_workspace:
                at: artifacts
            - attach_workspace:
                at: /root/miniconda3/lib/python3.10/site-packages
            - run:
                name: "Run tests"
                command: |
                  arch=$(uname -i)
                  cp artifacts/_lib_$arch.so  secretflow/security/privacy/
                  mv secretflow/security/privacy/_lib_$arch.so secretflow/security/privacy/_lib.so
                  pytest --testmon --env prod  -n auto --junitxml=results.xml -v -x --capture=no --cov=secretflow/  --cov-report=xml:coverage.xml  tests/ml/boost/
            - save_cache:
                key: testmondata-ml_boost_{{ arch }}-{{ .Branch }}-{{ .Revision }}
                paths:
                  - .testmondata
                when: always
            - store_test_results:
                path: ./results.xml

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build_and_test:
    jobs:
      - linux_build:
          matrix:
            parameters:
              resource_class: ["2xlarge"]
      - macos_build
      - linux_ml_boost_test:
          matrix:
            parameters:
              resource_class: ["2xlarge"]
          requires:
            - linux_build
          

